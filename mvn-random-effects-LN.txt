############## MVN Fixed-Effects NMA Model for Two Indications #################

model{

	### Loop through studies
	for(i in 1:ns){
		
		w[i,1] <- 0					# multi-arm adjustment; always 0 for study-specific baseline arm
		mu[i] ~ dt(0,1/(2.5)^2,7)			# weakly informative Student-t priors for each study-specific baseline (nuisance parameter)
		delta[i,t[i,1]] <- 0				# the random effect is 0 for study-specific baseline arms
	
		### for each study, loop through each arm
		for(k in 1:na[i]){
			r[i,k] ~ dbin(p[i,t[i,k]], n[i,k])				# binomial likelihood for events in each arm
			logit(p[i,t[i,k]]) <- mu[i] + delta[i,t[i,k]]			# mean now dependent on indication
		}

	### loop through non-control arms for this study
		for(k in 2:na[i]){
			delta[i,t[i,k]] ~ dnorm(md[i,t[i,k]], taud[i,t[i,k]]) 						# random effects; trial-specific log-ORs
			md[i,t[i,k]] <- d[-2+2*t[i,k]+indication[i]] - d[-2+2*t[i,1]+indication[i]] + sw[i,k]		# md is a functional parameter; defined by basic parameters d which compare treatment k to A; 
			taud[i,t[i,k]] <- tau[indication[i]]*2*(k-1)/k			      				# precision of LOR distribution; equal to tau when there are only 2 arms (homogeneous variance assumption)
			w[i,k] <- (delta[i,t[i,k]] - d[-2+2*t[i,k]+indication[i]] + d[-2+2*t[i,1]+indication[i]]) 	# adjustment, multi-arm RCTs
	     		sw[i,k] <- sum(w[i, 1:(k-1)])/(k-1)								# equal to 0 when only 2 arms

		}													# d is a vector of all indiction-specific basic parameters; e.g., d = c(d[111], d[112], d[121], d[122], ......., d[1k1], d[1k2])
	}	

	d[1] <- 0                         	# treatment effect is zero for reference treatment for both indications
	d[2] <- 0
	mud[1] <- 0
	mud[2] <- 0
	
	### prior for d's - MVN distribution
	d[3:(nt*2)] ~ dmnorm(mud[3:(nt*2)], Prec)
	
	### define mean structure for d's (beta0 - 0.5*beta2 for indication 1 and beta0 + 0.5*beta2 for indication 2)
	for(k in 2:nt){
		mud[2*k-1] <- beta0 - 0.5*beta2
		mud[2*k] <- beta0 + 0.5*beta2
	}

	### define priors for regression coefs
	beta0 ~ dt(0,1/(2.5)^2,7)
	beta2 ~ dt(0,1/(2.5)^2,7)

	### Define component matrices for the covariance matrix for the d's
	Sigma[1,1] <- sd[1]^2
	Sigma[1,2] <- sd[1]*sd[2]*rho
	Sigma[2,2] <- sd[2]^2
	Sigma[2,1] <- sd[1]*sd[2]*rho
	Delta[1,1] <- sd[1]^2/2
	Delta[1,2] <- sd[1]*sd[2]*rho/2
	Delta[2,2] <- sd[2]^2/2
	Delta[2,1] <- sd[1]*sd[2]*rho/2

	### Define covariance matrix for the d's using Sigma and Delta 
	for (i in 1:(nt-1)) {
        	Cov[(2*i-1):(2*i),(2*i-1):(2*i)] <- Sigma[1:2,1:2]
        	for (j in (i+1):(nt-1)) {
            		Cov[(2*i-1):(2*i),(2*j-1):(2*j)] <- Delta[1:2,1:2]
            		Cov[(2*j-1):(2*j),(2*i-1):(2*i)] <- Cov[(2*i-1):(2*i),(2*j-1):(2*j)] 
        	}
   	 }

	### priors for the elements of the covariance matrix
	sd[1] ~ dnorm(0,1)T(0,)
	sd[2] ~ dnorm(0,1)T(0,)
	rho ~ dunif(0,1)
	
	### take inverse of covariance matrix to get precision matrix
	Prec <- inverse(Cov)

	### priors for between-trial SD (sd of the random effects)
	for(i in 1:2){
		sdd[i] ~ dlnorm(-2.70,1/1.52)
		tau[i] <- 1/pow(sdd[i],2)
	}
	
	### draw from the posterior predictive distribution for all treatments and indications
	for(k in 1:nt){
			d.new[2*k-1] ~ dnorm(d[2*k-1],pow(sdd[1],-2))
			d.new[2*k] ~ dnorm(d[2*k],pow(sdd[2],-2))
		}
	

}